/*
 * Blue_Flag_White_Flag.c
 *
 * Created: 2021-05-13 오전 9:16:47
 * Author : sungyeoun
 */ 

#define F_CPU 16000000///////Blue_flag_White_flag
#include <avr/io.h>
#include <util/delay.h>
#define BV(n)

void COMMAND(unsigned char byte);
void DATA(unsigned char byte);
void LCD_INIT(void);
void random_char(void);
void fnd_on(unsigned char i, unsigned char num);
int game_score(unsigned char i, unsigned char num);
int life = 0;
int value;

unsigned char fnd[10] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};
unsigned char fnd_seats [4] = {0x08,0x04,0x02,0x1};
unsigned char string_start[]="GAME START";
unsigned char string_over[]="GAME OVER";
unsigned char string_Blue_up[]="Blue Flag UP";
unsigned char string_Blue_down[]="Blue Flag Down";
unsigned char string_White_up[]="White Flag UP";
unsigned char string_White_down[]="White Flag Down";
unsigned int score=0;

void STRING(unsigned char font[], unsigned char n)
{
	unsigned char i;
	for(i=0;i<n;i++)
	{
		DATA(font[i]);
	}
}

int main(void)
{
	
	DDRA= 0xFF; // LED
	DDRG=0x0F; // FND COM1 COM2 COM3 COM4
	DDRF=0xFF;// FND a,b,c,d,e,f,g
	DDRC = 0xff; // LCD
	PORTC = 0x00;
	DDRE = 0x00; // 버튼
	
	LCD_INIT();
	
	if ((PINE&0x01)==0x00)////시작 버튼이 눌렸을때
	{
		STRING(string_start,10);
		while(1)
			random_char();
	}
	if ((PINE&0x02)==0x00)////종료 버튼이 눌렸을때
	{
		LCD_INIT();
		STRING(string_start,10);
		_delay_ms(1000);
	}
	
	if(value == 0 && (PINE&0x10)==0x00)///Blue Flag UP
	{
			score += 100;
	}
	if(value == 1 && (PINE&0x20)==0x00)///Blue Flag Down
	{
			score += 100;
	}
	if(value == 2 && (PINE&0x30)==0x00)///White Flag UP
	{
			score += 100;
	}
	if(value == 3 && (PINE&0x40)==0x00)///White Flag Down
	{
			score += 100;
	}
	else// led 역순으로 OFF
	{
		int i = 0;
		PORTA &= ~(0x80>>i);
		_delay_ms(500);
		i++;
	}
	return 0;
}
void fnd_on(unsigned char i, unsigned char score)
{
	PORTF = fnd_seats[score % 10];
	PORTG &= ~(PORTB & 0x1F);
	PORTG |= (BV(i) & 0x1F);
}

int game_score(unsigned int score) 
{
		if (score > 9999) score = 0;
		else if (score < 0) score = 9999;
		
		fnd_on(fnd_seats[0],score/1000);
		_delay_ms(2);                      
		fnd_on(fnd_seats[1],score/100%10);
		_delay_ms(2);
		fnd_on(fnd_seats[2],score/10%10);
		_delay_ms(2);
		fnd_on(fnd_seats[3],score%10);
		_delay_ms(2);                          
		
}

void random_char(void)
{
	while(1)
		value = random(0,3);
	if(value == 0)
		STRING(string_Blue_up,12);
	if(value == 1)
		STRING(string_Blue_down,14);
	if(value == 2)
		STRING(string_White_up,13);
	if(value == 3)
		STRING(string_White_down,15);
}

void LCD_INIT(void)
{
	_delay_ms(30);	// 전원 투입 후 30ms 이상 지연
	
	//Function set
	COMMAND(0b00101000);
	// 인터페이스(DL)=0(4bit), 라인(N)=1(2라인), 폰트(F)=0(5*8 dot)
	_delay_us(39);	// 39us 이상 지연

	//Display ON/OFF Control
	COMMAND(0b00001100);
	// 화면 표시(D)=1(on), 커서(C)=0(off), 블링크(B)=0(off)
	_delay_us(39);	// 39us 이상 지연

	//Clear Display
	COMMAND(0b00000001);
	// 화면을 클리어하고 , 커서가 홈위치인 0번지로 돌아감.
	_delay_ms(1.53);	// 1.53ms 이상 지연

	//Entry Mode Set
	COMMAND(0b00000110);
	// 커서방향(I/D)=1(address증가), 표시이동(S)=0(이동하지 않음)
}

void COMMAND(unsigned char byte)
{
	_delay_ms(2);

	PORTC=byte&0xf0;// 상위4비트 명령어 쓰기
	PORTC&=0b11111100;  // RS = 0, RW = 0, 명령어를 쓰도록 설정
	_delay_us(1);
	PORTC|=0b00000100; // E = 1, lcd 동작
	_delay_us(1);
	PORTC&=0b11111011;// E = 0

	PORTC=(byte<<4)&0xf0;// 하위4비트 명령어 쓰기
	PORTC&=0b11111100;// RS = 0, RW = 0, 명령어를 쓰도록 설정
	_delay_us(1);
	PORTC|=0b00000100; // E = 1, lcd 동작
	_delay_us(1);
	PORTC&=0b11111011;// E = 0
}

void DATA(unsigned char byte)
{
	_delay_ms(2);

	PORTC=byte&0xf0;// 상위4비트 명령어 쓰기
	PORTC |= 0b00000001;// RS = 1, 데이터 설정
	PORTC &= 0b11111101;// RW = 0, 쓰기 설정
	_delay_us(1);
	PORTC|=0b00000100; // E = 1, lcd 동작
	_delay_us(1);
	PORTC&=0b11111011;// E = 0

	PORTC=(byte<<4)&0xf0;// 하위4비트 데이터 쓰기
	PORTC |= 0b00000001;// RS = 1, 데이터 설정
	PORTC &= 0b11111101;// RW = 0, 쓰기 설정
	_delay_us(1);
	PORTC|=0b00000100; // E = 1, lcd 동작
	_delay_us(1);
	PORTC&=0b11111011;// E = 0
}
